
-----------------------------------------------------------------------------------------------------------------
# domain config
if you have your own domain, please point *.$DOMAIN *.apps.$DOMAIN to your public ip 
and port forward 8443,443,80,22 to this server.

-----------------------------------------------------------------------------------------------------------------
# install centos 7 minimum
1. set timezone & date time
2. enable network & set hostname (i.e. okd.$DOMAIN)
3. create user account & make it as administrator

-----------------------------------------------------------------------------------------------------------------
# centos preparation

# copy ssh public key over to server
ssh-copy-id -i ~/.ssh/id_rsa.pub $USER@okd

# ssh to server and become root
ssh $USER@okd
sudo -i

# add sudoers
echo '$USER ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/$USER

# set locale under /etc/environment
cat << EOF >> /etc/environment
LANGUAGE="en_US.UTF-8"
LC_ALL="en_US.UTF-8"
EOF

# append /usr/local/bin to PATH
cat << 'EOF' >> /etc/profile.d/sh.local
export PATH=${DOLLAR}PATH:/usr/local/bin
EOF
source /etc/profile

# set proxy under /etc/environment (only if required)
cat << EOF >> /etc/environment
http_proxy="$HTTP_PROXY"
https_proxy="$HTTP_PROXY"
no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com,.cluster.local,.svc,172.30.0.1,.$DOMAIN"
EOF

# update system
yum -y update

# setup internal dns
yum -y install dnsmasq 
cat << EOF >> /etc/dnsmasq.conf
address=/$DOMAIN/$(ip -4 addr show eno1 | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
EOF
systemctl restart dnsmasq

-----------------------------------------------------------------------------------------------------------------
# install openshift
# - during install, please keep using the root user

# install git
yum -y install git

# set proxy (only if required)
git config --global --add http.proxy "$HTTP_PROXY"

# clone the okd ansible playbook scripts
git clone https://github.com/okd-community-install/installcentos
cd installcentos

# start the installation
export DOMAIN=$DOMAIN
./install-openshift.sh

-----------------------------------------------------------------------------------------------------------------
# uninstall if any failure occur then retry installation

ansible-playbook -i inventory.ini openshift-ansible/playbooks/adhoc/uninstall.yml
rm -rf /mnt/data/

-----------------------------------------------------------------------------------------------------------------
# enable anyuid access for whole cluster (required for heroku image)

oc adm policy add-scc-to-group anyuid system:authenticated

-----------------------------------------------------------------------------------------------------------------
# create a cluster-admin service account for gitlab kubernetes Integration

oc project kube-system
oc create serviceaccount admin-user
oc create clusterrolebinding admin-user \
  --clusterrole=cluster-admin \
  --serviceaccount=kube-system:admin-user

-----------------------------------------------------------------------------------------------------------------
# generate the cert for gitlab

certbot certonly --manual --preferred-challenges dns -d gitlab.$DOMAIN
certbot certonly --manual --preferred-challenges dns -d registry.$DOMAIN

-----------------------------------------------------------------------------------------------------------------
# install gitlab

oc new-project gitlab
oc create -f https://raw.githubusercontent.com/hardyscc/openshift-template/master/gitlab-template.yaml
oc adm policy add-scc-to-user anyuid -z gitlab-user
oc create secret generic gitlab-cert \
  --from-file=gitlab.crt=/etc/letsencrypt/live/gitlab.$DOMAIN/fullchain.pem \
  --from-file=gitlab.key=/etc/letsencrypt/live/gitlab.$DOMAIN/privkey.pem \
  --from-file=registry.crt=/etc/letsencrypt/live/registry.$DOMAIN/fullchain.pem \
  --from-file=registry.key=/etc/letsencrypt/live/registry.$DOMAIN/privkey.pem
oc new-app gitlab -p APPLICATION_DOMAIN=$DOMAIN
oc rollout status deploymentconfig gitlab

-----------------------------------------------------------------------------------------------------------------
# install gitlab runner
## Goto https://gitlab.$DOMAIN
## lookup the gitlab runner REGISTRATION_TOKEN under Overview > Runners

oc new-project gitlab-runner
oc create -f https://raw.githubusercontent.com/hardyscc/openshift-template/master/gitlab-runner-template.yaml
oc adm policy add-scc-to-user privileged -z gitlab-runner-user 
oc new-app gitlab-runner \
  -p GITLAB_URL=https://gitlab.$DOMAIN/ \
  -p REGISTRATION_TOKEN="$REGISTRATION_TOKEN" \
  -p GITLAB_REGISTRY_URL=registry.$DOMAIN \
  -p HTTP_PROXY="$HTTP_PROXY" \
  -p HTTPS_PROXY="$HTTP_PROXY" \
  -p NO_PROXY="localhost,127.0.0.1,localaddress,.localdomain.com,.cluster.local,.svc,172.30.0.1,.$DOMAIN"
oc rollout status deploymentconfig gitlab-runner

## gitlab-runner need privileged bcos of dind (docker in docker)
## https://docs.gitlab.com/runner/executors/kubernetes.html#using-dockerdind

-----------------------------------------------------------------------------------------------------------------
# Gitlab administration config: (login as root)

1. Overview > Users - Add User $USER
2. Settings > CI/CD > Continuous Integration and Deployment - set Auto devops domain as apps.$DOMAIN

-----------------------------------------------------------------------------------------------------------------
# Gitlab project config: (login as $USER)
## look up KUBE_TOKEN using
## > oc project kube-system
## > oc describe secret $(oc describe serviceaccount admin-user | grep admin-user-token | head -n 1 | awk '{print ${DOLLAR}NF}')

1. Operations > Kubernetes > Add Existing cluster
   - Kubernetes cluster name: openshift
   - API URL: https://console.$DOMAIN:8443/
   - Token: $KUBE_TOKEN
   - Project namespace: Empty
   - RBAC-enabled cluster: true
2. Settings > CI/CD > Variables 
  AUTO_DEVOPS_CHART_REPOSITORY=https://raw.githubusercontent.com/hardyscc/openshift-charts/master
  CODE_QUALITY_DISABLED=true
  POSTGRES_ENABLED=false
  GITLAB_FEATURES=license_management,sast,dependency_scanning,container_scanning,dast,review,stop_review

-----------------------------------------------------------------------------------------------------------------

